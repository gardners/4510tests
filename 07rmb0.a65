	 .include "test_top.a65"

         .byte 145,"$07 - RMB0 $NN"

	 .include "test_prepare.a65"

         ; perform one test
next:    	 
	 .include "test_setup_identity.a65"

	 .include "test_setup_zp.a65"
	 
	 ; this instruction just clears a bit.
	 ; no flags are affected.
	 lda dbefore
	 and #$fe
	 sta dresult

	 ; load registers for test
	 .include "test_setup.a65"
cmd:
         ; test instruction
    	 rmb0 $00

	 .include "test_record.a65"
	 .include "test_record_zp.a65"

	 .include "test_rom_on.a65"

	 ; do standard checks
	 jsr check

	 .include "test_next_alu.a65"
	 .include "test_common.a65"

	 ; name of next test
printname: jsr print
name:    .byte "08PHP"
nameend: .byte 0
	 rts
